services:
  mariadb:
    image: mariadb
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  wordpress:
    image: wordpress
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wordpress_data:/var/www/wordpress
    depends_on:
      - mariadb
      - redis
    environment:
      SQL_USER: ${MYSQL_USER}
      SQL_PASSWORD: ${MYSQL_PASSWORD}
      SQL_DATABASE: ${MYSQL_DATABASE}
      DOMAIN_NAME: ${DOMAIN_NAME}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_PASSWORD: ${WP_ADMIN_PASSWORD}
      WP_USER: ${WP_USER}
      WP_USER_PASSWORD: ${WP_USER_PASSWORD}
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "pidof", "php-fpm7.4"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
      args:
        DOMAIN_NAME: ${DOMAIN_NAME}
    ports:
      - "443:443"
    depends_on:
      - wordpress
    volumes:
      - wordpress_data:/var/www/wordpress
      - adminer_data:/var/www/adminer
      - static_site_data:/var/www/static_site
    restart: unless-stopped
    networks:
      - inception
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      ADMINER_DOMAIN: ${ADMINER_DOMAIN}
      STATIC_DOMAIN: ${STATIC_DOMAIN}
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis
    container_name: redis
    build:
      context: ./requirements/redis
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  portainer:
    image: portainer
    container_name: portainer
    build:
      context: ./requirements/portainer
      dockerfile: Dockerfile
      args:
        ADMIN_PASSWORD: ${PORTAINER_ADMIN_PASSWORD}
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  ftp:
    image: ftp
    container_name: ftp
    build:
      context: ./requirements/ftp
      dockerfile: Dockerfile
    environment:
      FTP_USER: ${FTP_USER}
      FTP_PASSWORD: ${FTP_PASSWORD}
    volumes:
      - wordpress_data:/var/www/wordpress
    depends_on:
      - wordpress
    ports:
      - "21:21"
      - "40000-40005:40000-40005"
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "21"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  
  adminer:
    image: adminer
    container_name: adminer
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile
    depends_on:
      - mariadb
    volumes:
      - adminer_data:/var/www/adminer
    restart: unless-stopped
    networks:
      - inception
    healthcheck:
      test: ["CMD", "pidof", "php-fpm7.4"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  static_site:
    image: static_site
    container_name: static_site
    build:
      context: ./requirements/static_site
      dockerfile: Dockerfile
    volumes:
      - static_site_data:/var/www/static_site
    restart: on-failure
    networks:
      - inception

volumes:
  mariadb_data:
    driver: local
    driver_opts:
      type: none
      device: /home/asuc/data/mariadb
      o: bind
  wordpress_data:
    driver: local
    driver_opts:
      type: none
      device: /home/asuc/data/wordpress
      o: bind
  static_site_data:
    driver: local
    driver_opts:
      type: none
      device: /home/asuc/data/static_site
      o: bind
  adminer_data:
    driver: local
    driver_opts:
      type: none
      device: /home/asuc/data/adminer
      o: bind

networks:
  inception:
    driver: bridge
